---
layout: post
title: "Python рд▓рд╛рдИрдмреНрд░реЗрд░реА Pandas рдЯреНрдпреБрдЯреЛрд░рд┐рдпрд▓ "
date: 2025-02-13 08:45:12 +0545
---

Pandas рднрдиреЗрдХреЛ Python рдорд╛ рдЖрдзрд╛рд░рд┐рдд рдПрдХ рдУрдкрди рд╕реЛрд░реНрд╕ рд╕рдлреНрдЯрд╡реЗрдпрд░ рд▓рд╛рдЗрдмреНрд░реЗрд░реА рд╣реЛ ред рдпрд╕рд▓реЗ рдкреНрд░рдпреЛрдЧрдХрд░реНрддрд╛рд▓рд╛рдИ spreadsheet рдорд╛ рдЬрд╕реНрддреИ рдЫрд┐рдЯреЛ рдбреЗрдЯрд╛ рд▓реЛрдб рдЧрд░реНрди, рдЖрд╡рд╢реНрдпрдХрддрд╛ рдЕрдиреБрд╕рд╛рд░ рднрд┐рдиреНрди рдврд╛рдБрдЪрд╛рдорд╛ рдбреЗрдЯрд╛рд▓рд╛рдИ рдкрд░рд┐рд╡рд░реНрддрди рдЧрд░реНрди, реи рд╡рд╛ реи рднрдиреНрджрд╛ рдмрдвреА рдбреЗрдЯрд╛рд╕реЗрдЯрд╣рд░реБрд▓рд╛рдИ рдорд░реНрдЬ рдЧрд░реНрдиреЗ рд▓рдЧрд╛рдпрддрдХрд╛ рдХрд╛рдорд╣рд░реВ рдЧрд░реНрдирдХреЛ рд▓рд╛рдЧреА рд╕рд╣рдЬрддрд╛ рдкреНрд░рджрд╛рди рдЧрд░реНрджрдЫ  ред рдпрд╕рд▓реЗ рдбреЗрдЯрд╛ рдХреНрд▓рд┐рдирд┐рдЩреНрдЧ рд░ structured рдбреЗрдЯрд╛рдХрд╛ рдврд╛рдБрдЪрд╛рд╣рд░реВ рдЬрд╕реНрддреИ tables, matrices, рд░ time-series рд╕рдБрдЧ рдХрд╛рдо рдЧрд░реНрди рд╕рдЬрд┐рд▓реЛ рдмрдирд╛рдЙрдБрдЫ ред рдпреЛ Python рдХрд╛ рдЕрд░реБ scientific libraries рд╕рдБрдЧ рдкрдирд┐ рд░рд╛рдореНрд░реЛрд╕рдБрдЧ рдХрд╛рдо рдЧрд░реНрдЫ ред

---

## рез. pandas рдЗрдиреНрд╕реНрдЯрд▓ рдЧрд░реНрдиреЗ рд░ рд╕реЗрдЯрдЕрдк рдЧрд░реНрдиреЗ  
рд╕рдмреИрднрдиреНрджрд╛ рдкрд╣рд┐рд▓реЗ, рддрдкрд╛рдИрдВрдХреЛ рдХрдореНрдкреНрдпреБрдЯрд░рдорд╛ pandas рд▓рд╛рдЗрдмреНрд░реЗрд░реА **рдЗрдиреНрд╕реНрдЯрд▓** рдЧрд░реНрдиреБрдкрд░реНрдЫред 

```python
pip install pandas
import pandas as pd
```

`pd` **pandas рдХреЛ рд╕рдВрдХреНрд╖рд┐рдкреНрдд рдирд╛рдо** рд╣реЛ, рдЬреБрди рдкреНрд░рд╛рдпрдГ рдкреНрд░рдпреЛрдЧ рдЧрд░рд┐рдиреНрдЫред

---

## реи. pandas рдХреЛ рдореБрдЦреНрдп рдбрд╛рдЯрд╛ рд╕рдВрд░рдЪрдирд╛ (Data Structures)  
рдкреНрдпрд╛рдиреНрдбрд╛рд╕рдорд╛ Series рд░ DataFrame рджреБрдИ рдкреНрд░рдореБрдЦ рдбреЗрдЯрд╛ рд╕реНрдЯреНрд░рдХреНрдЪрд░рд╣рд░реБ рд╣реБрдиреНрдЫрдиреНред рд╡рд╛рди рдбрд╛рдИрдореЗрдиреНрд╕рдирд▓ рдбреЗрдЯрд╛ рд╕рдВрд░рдЪрдирд╛рд▓рд╛рдИ рд╕рд┐рд░рд┐рдЬ рднрдирд┐рдиреНрдЫ рднрдиреЗ рдорд▓реНрдЯреАрдбрд╛рдИрдореЗрдиреНрд╕рдирд▓ рдбреЗрдЯрд╛ рд╕рдВрд░рдЪрдирд╛рд▓рд╛рдИ рдбреЗрдЯрд╛рдлреНрд░реЗрдо рднрдирд┐рдиреНрдЫ ред рд╡рд╛рди рдбрд╛рдИрдореЗрдиреНрд╕рдирд▓ рдбреЗрдЯрд╛ рд╕рдВрд░рдЪрдирд╛ рд▓рд┐рд╕реНрдЯ рдЬрд╕реНрддреЛ рджреЗрдЦрд┐рдиреНрдЫ рднрдиреЗ рдбреЗрдЯрд╛рдлреНрд░реЗрдо рджреБрдИ рдбрд╛рдИрдореЗрдиреНрд╕рдирд▓ рд╕рдВрд░рдЪрдирд╛ рд╣реБрдиреНрдЫред

```python
import pandas as pd

data = [10, 20, 30, 40]
series = pd.Series(data)
print(series)
```
ЁЯУМ **рдЖрдЙрдЯрдкреБрдЯ:**
```
0    10
1    20
2    30
3    40
dtype: int64
```
ЁЯФ╣ Series рдорд╛ Index рд╣реБрдиреНрдЫ, рдЬреБрди рд╕реНрд╡рддрдГ 0,1,2,3... рдорд╛ рд╕реЗрдЯ рд╣реБрдиреНрдЫред
---

### ЁЯЯв DataFrame рдмрдирд╛рдЙрдиреЗ рддрд░рд┐рдХрд╛  
DataFrame рддреНрдпрд╕реНрддреЛ рд╕рдВрд░рдЪрдирд╛ рдЦрд╛рд▓рдХреЛ рд╕рдВрд░рдЪрдирд╛ рд╣реЛ рдЬрд╕рдорд╛ рд░реЛ (Rows) рд░ рдХреЛрд▓рдо (Columns) рд╣реБрдиреЗ рдЧрд░реНрджрдЫ ред 
```python
data = {
    "рдирд╛рдо": ["рд░рд╛рдо", "рд╕реАрддрд╛", "рдЧрд┐рддрд╛", "рд╢реНрдпрд╛рдо"],
    "рдЙрдореЗрд░": [25, 22, 28, 30],
    "рд╢рд╣рд░": ["рдХрд╛рдардорд╛рдбреМрдВ", "рдкреЛрдЦрд░рд╛", "рд▓рд▓рд┐рддрдкреБрд░", "рдмреБрдЯрд╡рд▓"]
}
df = pd.DataFrame(data)
print(df)
```
ЁЯУМ **рдЖрдЙрдЯрдкреБрдЯ:**  
```
    рдирд╛рдо  рдЙрдореЗрд░     рд╢рд╣рд░
0   рд░рд╛рдо    25  рдХрд╛рдардорд╛рдбреМрдВ
1  рд╕реАрддрд╛    22   рдкреЛрдЦрд░рд╛
2  рдЧрд┐рддрд╛    28  рд▓рд▓рд┐рддрдкреБрд░
3  рд╢реНрдпрд╛рдо    30   рдмреБрдЯрд╡рд▓
```

---

## рей. DataFrame рдХреЛ рдмреЗрд╕рд┐рдХ рдЕрдкрд░реЗрд╢рдирд╣рд░реВ  

### ЁЯФ╣ рдкрд╣рд┐рд▓реЛ рдкрд╛рдБрдЪ рдкрдВрдХреНрддрд┐ рд╣реЗрд░реНрди (head)
```python
print(df.head())

### ЁЯФ╣ рдЕрдиреНрддрд┐рдо рдкрд╛рдБрдЪ row рд╣реЗрд░реНрди (tail)
print(df.tail())

### ЁЯФ╣ рдбрд╛рдЯрд╛ рдкреНрд░рдХрд╛рд░ (Data Types) рд╣реЗрд░реНрди
print(df.dtypes)

### ЁЯФ╣ columns рд╣рд░реВрдХреЛ рдирд╛рдо рд╣реЗрд░реНрди
print(df.columns)

### ЁЯФ╣ row рд╕рдВрдЦреНрдпрд╛ рд░ column рд╕рдВрдЦреНрдпрд╛ рд╣реЗрд░реНрди
print(df.shape)
```

---

## рек. DataFrame рдмрд╛рдЯ рдбреЗрдЯрд╛ рд╕реЗрд▓реЗрдХреНрд╕рди (Selection)  

### ЁЯФ╣ рдХреБрдиреИ рдПрдХ рд╕реНрддрдореНрдн (Column) рдЪрдпрди рдЧрд░реНрдиреЗ
```python
print(df["name"])

### ЁЯФ╣ рд╡рд┐рд╢реЗрд╖ рдкрдВрдХреНрддрд┐ (Row) рдЪрдпрди рдЧрд░реНрдиреЗ
print(df.loc[1])   # рджреЛрд╕реНрд░реЛ Row
print(df.iloc[2])  # рддреЗрд╕реНрд░реЛ Row

### ЁЯФ╣ рд╡рд┐рд╢реЗрд╖ Row рд░ Column рд╕реЗрд▓реЗрдХреНрдЯ рдЧрд░реНрдиреЗ
print(df.loc[0, "city"])  # рдкрд╣рд┐рд▓реЛ рд╡реНрдпрдХреНрддрд┐рдХреЛ рд╢рд╣рд░
```

рез.рез. Addition (+)
рджреБрдИ рд╡рд╛ рдмрдвреА рд╕рдВрдЦреНрдпрд╛рд╣рд░реВрдХреЛ рдЬреЛрдбрд╝ рдЧрд░реНрдирдХреЛ рд▓рд╛рдЧрд┐ рдкреНрд░рдпреЛрдЧ рдЧрд░рд┐рдиреНрдЫред
``` python
python
Copy
Edit
a = 10
b = 5
result = a + b
print(result)  # 15
```


рез.реи. Subtraction (-)
рджреБрдИ рд╕рдВрдЦреНрдпрд╛рдХреЛ рдШрдЯрд╛рдЙ рдЧрд░реНрдирдХреЛ рд▓рд╛рдЧрд┐ рдкреНрд░рдпреЛрдЧ рдЧрд░рд┐рдиреНрдЫред

python
Copy
Edit
a = 10
b = 5
result = a - b
print(result)  # 5
рез.рей. Multiplication (*)
рджреБрдИ рд╕рдВрдЦреНрдпрд╛рдХреЛ рдЧреБрдгрд╛ рдЧрд░реНрдирдХреЛ рд▓рд╛рдЧрд┐ рдкреНрд░рдпреЛрдЧ рдЧрд░рд┐рдиреНрдЫред

python
Copy
Edit
a = 10
b = 5
result = a * b
print(result)  # 50
рез.рек. Division (/)
рджреБрдИ рд╕рдВрдЦреНрдпрд╛рдХреЛ рднрд╛рдЧ рдЧрд░реНрдиреЗ рдЕрдкрд░реЗрдЯрд░ рд╣реЛ, рдЬрд╕рд▓реЗ рд╡рд┐рднрд╛рдЬрдирдХреЛ рдкрд░рд┐рдгрд╛рдо рдлреНрд▓реЛрдЯрд┐рдЩ рдкреЛрдЗрдиреНрдЯ рднреНрдпрд╛рд▓реБ рджрд┐рдиреНрдЫред

python
Copy
Edit
a = 10
b = 5
result = a / b
print(result)  # 2.0
рез.рел. Floor Division (//)
рджреБрдИ рд╕рдВрдЦреНрдпрд╛рдХреЛ рднрд╛рдЧ рдЧрд░реНрджрд╛ рдХреЗрд╡рд▓ рдкреВрд░реНрдгрд╛рдВрдХ (integer) рдкрд░рд┐рдгрд╛рдо рджрд┐рдиреЗ рдЕрдкрд░реЗрдЯрд░ рд╣реЛред

python
Copy
Edit
a = 10
b = 3
result = a // b
print(result)  # 3
рез.рем. Modulus (%)
рдпреЛ рдЕрдкрд░реЗрдЯрд░рд▓реЗ рджреБрдИ рд╕рдВрдЦреНрдпрд╛рдХреЛ рднрд╛рдЧрдХреЛ рдмрд╛рдХреА рдирд┐рдХрд╛рд▓реНрдЫред

python
Copy
Edit
a = 10
b = 3
result = a % b
print(result)  # 1
рез.рен. Exponentiation (**)
рдпреЛ рдЕрдкрд░реЗрдЯрд░рд▓реЗ рджреБрдИ рд╕рдВрдЦреНрдпрд╛рдХреЛ рдШрд╛рдд рдирд┐рдХрд╛рд▓реНрдЫред

python
Copy
Edit
a = 2
b = 3
result = a ** b
print(result)  # 8
реи. рд╕реНрдЯреНрд░рд┐рдЩ рдЕрдкрд░реЗрд╕рдирд╣рд░реВ (String Operations)
Python рдорд╛ рд╕реНрдЯреНрд░рд┐рдЩ рдкрдирд┐ рдПрдХ рдкреНрд░рдореБрдЦ рдбрд╛рдЯрд╛ рдкреНрд░рдХрд╛рд░ рд╣реЛ рд░ рдпрд╕рдорд╛ рдХреЗрд╣рд┐ рдорд╣рддреНрд╡рдкреВрд░реНрдг рдЕрдкрд░реЗрд╕рдирд╣рд░реВ рд▓рд╛рдЧреВ рдЧрд░реНрди рд╕рдХрд┐рдиреНрдЫред

реи.рез. Concatenation (+)
рд╕реНрдЯреНрд░рд┐рдЩрд╣рд░реВрд▓рд╛рдИ рдЬреЛрдбреНрдирдХреЛ рд▓рд╛рдЧрд┐ + рдЕрдкрд░реЗрдЯрд░ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрди рд╕рдХрд┐рдиреНрдЫред

python
Copy
Edit
str1 = "Hello"
str2 = "World"
result = str1 + " " + str2
print(result)  # Hello World
реи.реи. Repetition (*)
рд╕реНрдЯреНрд░рд┐рдЩрд▓рд╛рдИ рдкреБрдирдГ рджреЛрд╣реЛрд░реНрдпрд╛рдЙрдирдХреЛ рд▓рд╛рдЧрд┐ * рдЕрдкрд░реЗрдЯрд░ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрди рд╕рдХрд┐рдиреНрдЫред

python
Copy
Edit
str1 = "Hi "
result = str1 * 3
print(result)  # Hi Hi Hi 
реи.рей. Slicing
рд╕реНрдЯреНрд░рд┐рдЩрдХреЛ рдХреБрдиреИ рдкрдирд┐ рдЕрдВрд╢рд▓рд╛рдИ рд▓рд┐рдирдХреЛ рд▓рд╛рдЧрд┐ slicing рдкреНрд░рдпреЛрдЧ рдЧрд░реНрди рд╕рдХрд┐рдиреНрдЫред

python
Copy
Edit
str1 = "Python"
result = str1[1:4]  # Extracts "yth"
print(result)
реи.рек. Length (len())
рд╕реНрдЯреНрд░рд┐рдЩрдХреЛ рд▓рдореНрдмрд╛рдИ (рдХрддрд┐ рдЕрдХреНрд╖рд░рд╣рд░реВ рдЫрдиреН) рдкрддреНрддрд╛ рд▓рдЧрд╛рдЙрди len() рдлрдВрдХреНрд╕рди рдкреНрд░рдпреЛрдЧ рдЧрд░реНрди рд╕рдХрд┐рдиреНрдЫред

python
Copy
Edit
str1 = "Python"
result = len(str1)
print(result)  # 6
рей. рд▓рд┐рд╕реНрдЯ рдЕрдкрд░реЗрд╕рдирд╣рд░реВ (List Operations)
Python рдорд╛ рд▓рд┐рд╕реНрдЯрд╣рд░реВ рдПрдХ рдорд╣рддреНрд╡рдкреВрд░реНрдг рдбрд╛рдЯрд╛ рд╕рдВрд░рдЪрдирд╛ рд╣реЛ рдЬрд╕рдорд╛ рд╡рд┐рднрд┐рдиреНрди рдкреНрд░рдХрд╛рд░рдХрд╛ рдбрд╛рдЯрд╛ рд░рд╛рдЦреНрди рд╕рдХрд┐рдиреНрдЫред рд▓рд┐рд╕реНрдЯрдорд╛ рдХреЗрд╣реА рд╕рд╛рдорд╛рдиреНрдп рдЕрдкрд░реЗрд╕рдирд╣рд░реВ рдирд┐рдореНрдирд▓рд┐рдЦрд┐рдд рдЫрдиреНред

рей.рез. рд▓рд┐рд╕реНрдЯрдорд╛ рдЖрдЗрдЯрдо рдЬреЛрдбреНрдиреБ (Appending)
рд▓рд┐рд╕реНрдЯрдорд╛ рдирдпрд╛рдБ рдЖрдЗрдЯрдо рдердкреНрдирдХреЛ рд▓рд╛рдЧрд┐ append() рдореЗрдердб рдкреНрд░рдпреЛрдЧ рдЧрд░реНрди рд╕рдХрд┐рдиреНрдЫред

python
Copy
Edit
my_list = [1, 2, 3]
my_list.append(4)
print(my_list)  # [1, 2, 3, 4]
рей.реи. рд▓рд┐рд╕реНрдЯрдмрд╛рдЯ рдЖрдЗрдЯрдо рд╣рдЯрд╛рдЙрдиреБ (Removing)
рд▓рд┐рд╕реНрдЯрдмрд╛рдЯ рдЖрдЗрдЯрдо рд╣рдЯрд╛рдЙрдирдХреЛ рд▓рд╛рдЧрд┐ remove() рдореЗрдердб рдкреНрд░рдпреЛрдЧ рдЧрд░реНрди рд╕рдХрд┐рдиреНрдЫред

python
Copy
Edit
my_list = [1, 2, 3, 4]
my_list.remove(3)
print(my_list)  # [1, 2, 4]
рей.рей. рд▓рд┐рд╕реНрдЯрдХреЛ рд▓рдореНрдмрд╛рдИ рдЬрд╛рдиреНрдиреБ (Length of List)
рд▓рд┐рд╕реНрдЯрдХреЛ рд▓рдореНрдмрд╛рдИ рдкрддреНрддрд╛ рд▓рдЧрд╛рдЙрди len() рдкреНрд░рдпреЛрдЧ рдЧрд░реНрди рд╕рдХрд┐рдиреНрдЫред

python
Copy
Edit
my_list = [1, 2, 3]
result = len(my_list)
print(result)  # 3
рей.рек. рд▓рд┐рд╕реНрдЯрдорд╛ рдЖрдЗрдЯрдордХреЛ рд╕реНрдерд╛рди рдЬрд╛рдиреНрдиреБ (Indexing)
рд▓рд┐рд╕реНрдЯрдорд╛ рдХреБрдиреИ рдЖрдЗрдЯрдордХреЛ рд╕реНрдерд╛рди рдЬрд╛рдиреНрдирдХреЛ рд▓рд╛рдЧрд┐ index() рдореЗрдердб рдкреНрд░рдпреЛрдЧ рдЧрд░реНрди рд╕рдХрд┐рдиреНрдЫред

python
Copy
Edit
my_list = [1, 2, 3]
result = my_list.index(2)
print(result)  # 1
рек. рддреБрд▓рдирд╛ рдЕрдкрд░реЗрд╕рдирд╣рд░реВ (Comparison Operations)
Python рдорд╛ рд╡рд┐рднрд┐рдиреНрди рдкреНрд░рдХрд╛рд░рдХрд╛ рддреБрд▓рдирд╛ рдЕрдкрд░реЗрд╕рдирд╣рд░реВ рдЫрдиреН рдЬрд╕рд▓реЗ рджреБрдИ рднреЗрд░рд┐рдПрдмрд▓рд╣рд░реВрдХреЛ рддреБрд▓рдирд╛рд╕рдореНрдмрдиреНрдзреА рдкрд░рд┐рдгрд╛рдо рджрд┐рдиреНрдЫред рдпреА рдЕрдкрд░реЗрд╕рдирд╣рд░реВ Boolean рдорд╛рдирд╣рд░реВ (True рдпрд╛ False) рджрд┐рдиреНрдЫред

рек.рез. рд╕рдорд╛рдирддрд╛ (==)
рджреБрдИ рдорд╛рди рд╕рдорд╛рди рдЫрдиреН рдХрд┐ рдЫреИрди рднрдиреЗрд░ рдкрд░реАрдХреНрд╖рдг рдЧрд░реНрдирдХреЛ рд▓рд╛рдЧрд┐ == рдкреНрд░рдпреЛрдЧ рдЧрд░реНрди рд╕рдХрд┐рдиреНрдЫред

python
Copy
Edit
a = 5
b = 5
result = a == b
print(result)  # True
рек.реи. рдЕрд╕рдорд╛рдирддрд╛ (!=)
рджреБрдИ рдорд╛рди рдЕрд╕рдорд╛рди рдЫрдиреН рдХрд┐ рдЫреИрди рднрдиреЗрд░ рдкрд░реАрдХреНрд╖рдг рдЧрд░реНрдирдХреЛ рд▓рд╛рдЧрд┐ != рдкреНрд░рдпреЛрдЧ рдЧрд░реНрди рд╕рдХрд┐рдиреНрдЫред

python
Copy
Edit
a = 5
b = 3
result = a != b
print(result)  # True
рек.рей. рдареВрд▓реЛ, рд╕рд╛рдиреЛ, рд░ рд╕рдордХрдХреНрд╖ (> , < , >= , <=)
рджреБрдИ рдорд╛рдирдХреЛ рддреБрд▓рдирд╛рддреНрдордХ рдЬрд╛рдБрдЪ рдЧрд░реНрдирдХреЛ рд▓рд╛рдЧрд┐ рдпреА рдЕрдкрд░реЗрд╕рдирд╣рд░реВ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрди рд╕рдХрд┐рдиреНрдЫред

python
Copy
Edit
a = 5
b = 3
result = a > b
print(result)  # True
рел. Logical рдЕрдкрд░реЗрд╕рдирд╣рд░реВ (Logical Operations)
Logical operations рдХреЛ рдорджреНрджрддрд▓реЗ рд╣рд╛рдореА рджреБрдИ рд╡рд╛ рдмрдвреА рд╕рд░реНрддрд╣рд░реВрдХреЛ рдмрд┐рдЪрдорд╛ рд╕рдореНрдмрдиреНрдз рдЬрд╛рдБрдЪ рдЧрд░реНрди рд╕рдХреНрдЫреМрдВред

рел.рез. AND (and)
рдпрд╕рд▓реЗ рджреБрдИ рд╕рд░реНрдд рд╕рд╛рдБрдЪреЛ рднрдП рдорд╛рддреНрд░ рд╕рд╛рдБрдЪреЛ рдкрд░рд┐рдгрд╛рдо рджрд┐рдиреНрдЫред

python
Copy
Edit
a = True
b = False
result = a and b
print(result)  # False
рел.реи. OR (or)
рдпрд╕рд▓реЗ рдХреБрдиреИ рдПрдХ рд╕рд░реНрдд рд╕рд╛рдБрдЪреЛ рднрдП рдорд╛рддреНрд░ рд╕рд╛рдБрдЪреЛ рдкрд░рд┐рдгрд╛рдо рджрд┐рдиреНрдЫред

python
Copy
Edit
a = True
b = False
result = a or b
print(result)  # True
рел.рей. NOT (not)
рдпрд╕рд▓реЗ рд╕рд░реНрддрдХреЛ рдЙрд▓реНрдЯреЛ рдкрд░рд┐рдгрд╛рдо рджрд┐рдиреНрдЫред

python
Copy
Edit
a = True
result = not a
print(result)  # False

---

## рел. рдлрд┐рд▓реНрдЯрд░рд┐рдВрдЧ (Filtering) тАУ рдХрдиреНрдбрд┐рд╕рдирд▓ рд╕рд┐рд▓реЗрдХреНрд╢рди  
### ЁЯФ╣ реирел рд╡рд░реНрд╖рднрдиреНрджрд╛ рдмрдвреА рдЙрдореЗрд░ рднрдПрдХрд╛ рд╡реНрдпрдХреНрддрд┐рд╣рд░реВ рдЫрдиреЛрдЯ рдЧрд░реНрдиреЗ  
```python
print(df[df["рдЙрдореЗрд░"] > 25])
```
